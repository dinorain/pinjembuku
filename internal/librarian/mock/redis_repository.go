// Code generated by MockGen. DO NOT EDIT.
// Source: redis_repository.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	models "github.com/dinorain/pinjembuku/internal/models"
	gomock "github.com/golang/mock/gomock"
)

// MockLibrarianRedisRepository is a mock of LibrarianRedisRepository interface.
type MockLibrarianRedisRepository struct {
	ctrl     *gomock.Controller
	recorder *MockLibrarianRedisRepositoryMockRecorder
}

// MockLibrarianRedisRepositoryMockRecorder is the mock recorder for MockLibrarianRedisRepository.
type MockLibrarianRedisRepositoryMockRecorder struct {
	mock *MockLibrarianRedisRepository
}

// NewMockLibrarianRedisRepository creates a new mock instance.
func NewMockLibrarianRedisRepository(ctrl *gomock.Controller) *MockLibrarianRedisRepository {
	mock := &MockLibrarianRedisRepository{ctrl: ctrl}
	mock.recorder = &MockLibrarianRedisRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLibrarianRedisRepository) EXPECT() *MockLibrarianRedisRepositoryMockRecorder {
	return m.recorder
}

// DeleteLibrarianCtx mocks base method.
func (m *MockLibrarianRedisRepository) DeleteLibrarianCtx(ctx context.Context, key string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteLibrarianCtx", ctx, key)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteLibrarianCtx indicates an expected call of DeleteLibrarianCtx.
func (mr *MockLibrarianRedisRepositoryMockRecorder) DeleteLibrarianCtx(ctx, key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteLibrarianCtx", reflect.TypeOf((*MockLibrarianRedisRepository)(nil).DeleteLibrarianCtx), ctx, key)
}

// GetByIdCtx mocks base method.
func (m *MockLibrarianRedisRepository) GetByIdCtx(ctx context.Context, key string) (*models.Librarian, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByIdCtx", ctx, key)
	ret0, _ := ret[0].(*models.Librarian)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByIdCtx indicates an expected call of GetByIdCtx.
func (mr *MockLibrarianRedisRepositoryMockRecorder) GetByIdCtx(ctx, key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByIdCtx", reflect.TypeOf((*MockLibrarianRedisRepository)(nil).GetByIdCtx), ctx, key)
}

// SetLibrarianCtx mocks base method.
func (m *MockLibrarianRedisRepository) SetLibrarianCtx(ctx context.Context, key string, seconds int, user *models.Librarian) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetLibrarianCtx", ctx, key, seconds, user)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetLibrarianCtx indicates an expected call of SetLibrarianCtx.
func (mr *MockLibrarianRedisRepositoryMockRecorder) SetLibrarianCtx(ctx, key, seconds, user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetLibrarianCtx", reflect.TypeOf((*MockLibrarianRedisRepository)(nil).SetLibrarianCtx), ctx, key, seconds, user)
}
